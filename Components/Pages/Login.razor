@page "/"
@inject UserService UserService
@inject NavigationManager NavigationManager
@using ExpenseTracker.Components.Layout
@layout FirstLayout
@using ExpenseTracker.Models


<style>
    body, html {
        margin: 0;
        padding: 0;
        height: 100%;
    }

    .login {
        margin: 20px 0;
        font-weight: 500;
        font-size: 25px;
        text-align: center;
        margin: 10px 2px;
        padding: 4px;
    }

    .login-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 15px;
        height: 60vh;
    }

    .label {
        display: block;
        width: 100%;
        max-width: 300px;
        font-size: 14px;
        font-weight: 500;
        margin-bottom: 5px;
        text-align: left;
    }


    .input-field {
        display: block;
        width: 100%;
        max-width: 300px;
        padding: 10px;
        margin-bottom: 10px;
        border: 1px solid #ccc;
        border-radius: 10px;
        font-size: 16px;
    }

    .login-button {
        width: 50%;
        margin:0 auto;
        max-width: 250px;
        padding:5px 10px;
        background-color: blue;
        font-weight: 400;
        color: white;
        border: none;
        border-radius: 4px;
        font-size: 16px;
        cursor: pointer;
        transition: 0.3s;
         border: 1px solid black;
    }

    .login-button:hover {
         background-color: white;
        color: black;
        transition: 0.3s;
        font-weight: 600;
       
    }

    .message {
        margin-top: 10px;
        font-size: 14px;
        color: red;
        text-align: center;
    }

    .register-link {
        margin-top: 10px;
        font-size: 14px;
        text-decoration: none;
        color: #007bff;
        cursor: pointer;
    }

    .register-link:hover {
        text-decoration: underline;
    }

    .popup {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
    }

    .popup-content {
        background-color: white;
        padding: 20px;
        border-radius: 8px;
        text-align: center;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        width: 300px;
    }

        .popup-content h3 {
            margin-top: 0;
            font-size: 20px;
            color: #333;
        }

        .popup-content p {
            margin: 10px 0 20px;
            font-size: 16px;
            color: #555;
        }

    .close-button {
        padding: 10px 20px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-weight: bold;
    }

        .close-button:hover {
            background-color: #0056b3;
        }
</style>

<div class="login-container">
    <h3 class="login">Account Setup</h3>

    <div>
        <label class="label">Username:</label>
        <input class="input-field" @bind="LoginUsername" placeholder="Username" />
    </div>

    <div>
        <label class="label">Password:</label>
        <input class="input-field" @bind="LoginPassword" placeholder="Password" type="password" />
    </div>

    <button class="login-button" @onclick="LoginPage">Login</button>
    <a class="register-link" href="Register">Register</a>
</div>

@if (!string.IsNullOrEmpty(Message))
{
    <p class="message">@Message</p>
}
@if (ShowPopup)
{
    <div class="popup">
        <div class="popup-content">
            <h3>Error</h3>
            <p>@PopupMessage</p>
            <button class="close-button" @onclick="ClosePopup">Close</button>
        </div>
    </div>
}

@code {
    private string LoginUsername = "";
    private string LoginPassword = "";
    private string Message = "";
    private string PopupMessage = "";
    private bool ShowPopup = false;

    private List<User> Users = new();

    protected override void OnInitialized()
    {
        Users = UserService.LoadUsers();
    }

    private void LoginPage()
    {
        var user = Users.FirstOrDefault(u => u.Username == LoginUsername);

        if (user != null && UserService.ValidatePassword(LoginPassword, user.Password))
        {
            // Redirect to dashboard if login is successful
            NavigationManager.NavigateTo("/welcome");
        }
        else
        {
            PopupMessage = "Invalid username or password.";
            ShowPopup = true;
        }
    }
    private void ClosePopup()
    {
        ShowPopup = false;
    }
}