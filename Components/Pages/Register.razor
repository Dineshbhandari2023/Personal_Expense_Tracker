@page "/register"
@inject UserService UserService
@inject NavigationManager NavigationManager
@using ExpenseTracker.Components.Layout
@layout FirstLayout
@using ExpenseTracker.Models

<style>
    body, html {
        margin: 0;
        padding: 0;
        height: 100%;
        background-color: burlywood;
    }

    .register {
        font-weight: 600;
        font-size: 30px;
        text-align: center;
        margin: 9px 0;
        padding: 4px;
    }

    .label {
        display: block;
        width: 100%;
        max-width: 300px;
        font-size: 14px;
        font-weight: 500;
        margin-bottom: 5px;
        text-align: left;
    }

    .register-container {
        margin: 5px;
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 8px;
        justify-content: center;
        height: 60vh;
    }

    .input-field {
        display: block;
        width: 100%;
        max-width: 300px;
        padding: 10px;
        margin-bottom: 10px;
        border: 1px solid #ccc;
        border-radius: 10px;
        font-size: 16px;
    }

    .register-button {
        width: 50%;
        margin: 0 auto;
        max-width: 150px;
        padding: 5px 10px;
        background-color: deepskyblue;
        font-weight: 600;
        color: white;
        border: none;
        border-radius: 4px;
        font-size: 16px;
        cursor: pointer;
        transition: 0.3s;
        border: 1px solid black;
    }

        .register-button:hover {
            background-color: white;
            color: black;
            transition: 0.3s;
            font-weight: 600;
        }

    .message {
        margin-top: 10px;
        font-size: 14px;
        color: red;
        text-align: center;
    }

    .select-field {
        display: block;
        width: 100%;
        max-width: 300px;
        padding: 20px 10px;
        margin-bottom: 10px;
        border: 1px solid #ccc;
        border-radius: 10px;
        outline: none;
        font-size: 16px;
        background-color: white;
        color: black; /* Ensure the text color matches the input fields */
    }

    .popup {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
    }

    .popup-content {
        background-color: white;
        padding: 20px;
        border-radius: 8px;
        text-align: center;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        width: 300px;
    }

        .popup-content h3 {
            margin-top: 0;
            font-size: 20px;
            color: #333;
        }

        .popup-content p {
            margin: 10px 0 20px;
            font-size: 16px;
            color: #555;
        }

    .close-button {
        padding: 10px 20px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-weight: bold;
    }

        .close-button:hover {
            background-color: #0056b3;
        }

</style>



<div class="register-container">
    <h3 class="register"> Create Personal Expense tracker Account</h3>

    <div>
     <label class="label">Username:</label>
    <input class="input-field" @bind="RegisterUsername" placeholder="Username" />
    </div>

    <div>
    <label class="label">Password:</label>
    <input class="input-field" @bind="RegisterPassword" placeholder="Password" type="password" />
    </div>

    <div>
        <label class="label">Email:</label>
    <input class="input-field" @bind="RegisterEmail" placeholder="Email" />
    </div>

    <div>

    <label class="label">Select Currency:</label>
    <select class="select-field" @bind="SelectedCurrency">
        <option value="" disabled selected>Select Currency</option>
        <option value="USD">USD</option>
        <option value="NPR">NPR</option>
    </select>
    </div>


    <button class="register-button" @onclick="RegisterPage">Register</button>
        <a class="register-link" href="/">Already have an account?</a>
</div>

@if (ShowPopup)
{
    <div class="popup">
        <div class="popup-content">
            <h3>Error</h3>
            <p>User already exists. Please try a different username.</p>
            <button class="close-button" @onclick="ClosePopup">Close</button>
        </div>
    </div>
}

@if (!string.IsNullOrEmpty(Message))
{
    <p class="message">@Message</p>
}
@if (!string.IsNullOrEmpty(GreenMessage))
{
    <p class="Greenmessage">@GreenMessage</p>
}

@code {
    private string RegisterUsername = "";
    private string RegisterPassword = "";
    private string RegisterEmail = "";
    private string SelectedCurrency = "USD";
    private string Message = "";
    private string GreenMessage = "";
    private bool ShowPopup = false;

    private List<User> Users = new();

    protected override void OnInitialized()
    {
        Users = UserService.LoadUsers();
    }

    private void RegisterPage()
    {
        if (string.IsNullOrWhiteSpace(RegisterUsername) || string.IsNullOrWhiteSpace(RegisterPassword))
        {
            Message = "Username and password are required.";
            return;
        }

        if (Users.Any(u => u.Username == RegisterUsername))
        {
            ShowPopup = true;
            return;
        }

        var newUser = new User
            {
                Username = RegisterUsername,
                Password = UserService.HashPassword(RegisterPassword),
                Email = RegisterEmail,
                // Assuming User model has a Currency property
            };

        Users.Add(newUser);
        UserService.SaveUsers(Users);

        Message = "Registration successful. Redirecting to login...";
        Task.Delay(3000).ContinueWith(_ => NavigationManager.NavigateTo("/"));
    }
    private void ClosePopup()
    {
        ShowPopup = false;
    }
}